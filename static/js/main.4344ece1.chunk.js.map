{"version":3,"sources":["components/LoginComponent/LoginComponent.tsx","components/NavigationItem/NavigationItem.tsx","components/NavigationBar/NavigationBar.tsx","layouts/NavigationBarLayout/NavigationBarLayout.tsx","components/Button/Button.tsx","layouts/ProductsTable/ProductsTable.tsx","api.ts","views/Products/useProductsPage.ts","layouts/ProductModal/useProductModal.ts","layouts/ProductModal/ProductModal.tsx","components/FloatingAlert/FloatingAlert.tsx","views/Products/ProductsPage.tsx","layouts/Routes/Routes.tsx","components/LogoutButton/LogoutButton.tsx","layouts/Welcome/useWelcome.ts","layouts/Welcome/Welcome.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["LoginComponent","useState","email","setEmail","password","setPassword","error","setError","Grid","container","justify","alignItems","direction","style","height","backgroundColor","item","md","sm","xs","Paper","padding","margin","spacing","Typography","variant","color","TextField","fullWidth","label","type","onChange","event","target","value","onClick","firebase","auth","signInWithEmailAndPassword","then","catch","NavigationItem","props","history","useHistory","ListItem","button","push","link","selected","divider","ListItemText","primary","text","NavigationBar","List","items","map","index","key","NavigationBarLayout","withRouter","navigationItems","products","location","pathname","Button","loading","disabled","others","startIcon","CircularProgress","size","children","columns","useStyles","makeStyles","head","ProductsTable","classes","TableContainer","Table","TableHead","root","TableRow","column","TableCell","TableBody","rows","row","id","console","log","name","rate","quantity","details","IconButton","onRowDelete","deleting","onLoadMore","allLoaded","api","product","get","successCallback","errorCallback","startAfter","query","firestore","collection","limit","orderBy","result","add","data","success","newProductDoc","countsDoc","doc","counts","update","delete","productId","getSnapshot","onSnapshot","snapshot","productDocs","useProductsPage","modalOpen","setModalOpen","showSuccessMessage","setShowSuccessMessage","setRows","setDeleting","setLoading","useEffect","docs","forEach","openProductModal","closeProductModal","created","hideSuccessMessage","deleteProduct","splice","remaining","filter","i","addProduct","newProduct","sort","a","b","createdAt","loadMoreProducts","prev","concat","length","useProductModal","onAdd","close","setName","setDetails","handleClick","now","Date","updatedAt","onNameChange","onDetailsChange","ProductModal","open","Dialog","DialogTitle","multiline","FloatingAlert","Snackbar","autoHideDuration","onClose","reason","anchorOrigin","vertical","horizontal","severity","message","ProductsPage","FormControl","placeholder","numberOfProducts","aria-labelledby","Routes","routes","path","component","route","exact","LogoutButton","signOut","useWelcome","setNumberOfProducts","Welcome","basename","align","App","setloading","signedIn","setSignedIn","onAuthStateChanged","user","Boolean","window","hostname","match","createMuiTheme","MuiTextField","MuiButton","initializeApp","apiKey","projectId","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4344ece1.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {\n    FormControl,\n    Button,\n    TextField,\n    makeStyles,\n    Grid,\n    Typography,\n    Paper,\n} from '@material-ui/core';\nimport firebase from 'firebase';\n\nconst LoginComponent = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleClick = () => {\n        setError('');\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(() => {})\n            .catch(function (error) {\n                setError('Invalid User');\n            });\n    };\n\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"row\"\n            style={{height: '100vh', backgroundColor: 'lightBlue'}}\n        >\n            <Grid item md={4} sm={8} xs={12}>\n                <Paper style={{padding: 32, margin: 16}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" color=\"error\">\n                                {error}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                variant=\"outlined\"\n                                label=\"Email\"\n                                type=\"email\"\n                                onChange={(event) => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                variant=\"outlined\"\n                                type=\"password\"\n                                label=\"Password\"\n                                onChange={(event) => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button fullWidth variant=\"contained\" onClick={handleClick}>\n                                Login\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LoginComponent;\n","import React from 'react';\nimport { Link, ListItem, ListItemText } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nexport interface NavigationItemProps {\n    text: string;\n    link: string;\n    selected: boolean;\n}\nconst NavigationItem = (props: NavigationItemProps) => {\n    const history = useHistory();\n    return (\n    <ListItem button onClick={()=>{history.push(props.link)}} selected={props.selected} divider>\n        <ListItemText primary={props.text}/>\n   </ListItem>\n    );\n}\n    \n\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem, {NavigationItemProps} from '../NavigationItem/NavigationItem';\nimport { List } from '@material-ui/core';\n\ninterface NavigationBarProps {\n    items: NavigationItemProps[];\n}\n\nconst NavigationBar = (props: NavigationBarProps) => \n    <List>\n        {props.items.map((item:NavigationItemProps, index:number)=> (\n            <NavigationItem key={index} {...item}/>\n        ))}\n    </List>\n    \n\n\nexport default NavigationBar;","import React from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport {Grid} from '@material-ui/core';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport {NavigationItemProps} from '../../components/NavigationItem/NavigationItem';\nimport {withRouter, RouteComponentProps} from 'react-router-dom';\n\ninterface NavigationBarLayoutType extends RouteComponentProps {\n    products: number;\n}\n\nconst NavigationBarLayout = withRouter(({history, ...props}: NavigationBarLayoutType) => {\n    const navigationItems: NavigationItemProps[] = [\n        {\n            text: `Products (${props.products})`,\n            link: '/products',\n            selected:\n                history.location.pathname === '/products' || history.location.pathname === '/',\n        },\n        {\n            text: 'Purchases',\n            link: '/purchases',\n            selected: history.location.pathname === '/purchases',\n        },\n        {\n            text: 'Sales',\n            link: '/sales',\n            selected: history.location.pathname === '/sales',\n        },\n        {\n            text: 'Vendors',\n            link: '/vendors',\n            selected: history.location.pathname === '/vendors',\n        },\n        {\n            text: 'Customers',\n            link: '/customers',\n            selected: history.location.pathname === '/customers',\n        },\n        {\n            text: 'Employees',\n            link: '/employees',\n            selected: history.location.pathname === '/employees',\n        },\n        {\n            text: 'Accounts',\n            link: '/accounts',\n            selected: history.location.pathname === '/accounts',\n        },\n        {\n            text: 'Loans',\n            link: '/loans',\n            selected: history.location.pathname === '/loans',\n        },\n        {\n            text: 'Expenses',\n            link: '/expenses',\n            selected: history.location.pathname === '/expenses',\n        },\n        {\n            text: 'Vendor Payments',\n            link: '/vendorpayments',\n            selected: history.location.pathname === '/vendorpayments',\n        },\n        {\n            text: 'Customer Payments',\n            link: '/customerpayments',\n            selected: history.location.pathname === '/customerpayments',\n        },\n        {\n            text: 'Invoices',\n            link: '/invoices',\n            selected: history.location.pathname === '/invoices',\n        },\n    ];\n    return <NavigationBar items={navigationItems} />;\n});\n\nexport default NavigationBarLayout;\n","import React from 'react';\nimport {\n    Button as MuiButton,\n    ButtonProps as MuiButtonProps,\n    CircularProgress,\n} from '@material-ui/core';\n\ninterface ButtonProps extends MuiButtonProps {\n    loading?: boolean;\n}\nconst Button = (props: ButtonProps) => {\n    const {loading, disabled, ...others} = {...props};\n    return (\n        <MuiButton\n            {...others}\n            disabled={loading || disabled}\n            startIcon={loading ? <CircularProgress style={{color: 'white'}} size={'1rem'} /> : ''}\n        >\n            {props.children}\n        </MuiButton>\n    );\n};\n\nexport default Button;\n","import React, {useState, useEffect} from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport WelcomeText from '../../components/WelcomeText/WelcomeText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableSortLabel,\n    TableBody,\n    TablePagination,\n    makeStyles,\n    IconButton,\n} from '@material-ui/core';\nimport {firestore} from 'firebase';\nimport api from '../../api';\nimport ProductType from '../../model/product';\nimport Button from '../../components/Button/Button';\n\nconst createData = (\n    name: string,\n    averageRate: number,\n    quantity: number,\n    total: number,\n    details: string\n) => {\n    return {name, averageRate, quantity, total, details};\n};\n\nconst columns: string[] = ['Name', 'Average Rate', 'Quantity', 'Total', 'Details', 'Actions'];\n\nconst useStyles = makeStyles({\n    head: {\n        backgroundColor: '#ECEDEF',\n    },\n});\n\ninterface ProductsTableType {\n    rows: ProductType[];\n    onRowDelete: Function;\n    deleting: boolean;\n    loading?: boolean;\n    allLoaded: boolean;\n    onLoadMore: () => void;\n}\n\nconst ProductsTable = (props: ProductsTableType) => {\n    const classes = useStyles();\n    return (\n        <>\n            <Paper>\n                <TableContainer>\n                    <Table>\n                        <TableHead classes={{root: classes.head}}>\n                            <TableRow>\n                                {columns.map((column: string, index: number) => (\n                                    <TableCell key={index}>{column}</TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {props.rows.map((row, index) => (\n                                <TableRow\n                                    key={row.id}\n                                    onClick={() => {\n                                        console.log('clicked', index);\n                                    }}\n                                >\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.rate}</TableCell>\n                                    <TableCell>{row.quantity}</TableCell>\n                                    <TableCell>{row.rate * row.quantity}</TableCell>\n                                    <TableCell>{row.details}</TableCell>\n                                    <TableCell>\n                                        <IconButton\n                                            onClick={() => {\n                                                props.onRowDelete(index);\n                                            }}\n                                            disabled={props.deleting}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                    <Button\n                        onClick={props.onLoadMore}\n                        disabled={props.allLoaded}\n                        loading={props.loading}\n                    >\n                        Load More\n                    </Button>\n                </TableContainer>\n            </Paper>\n        </>\n    );\n};\n\nexport default ProductsTable;\n","import ProductType from './model/product';\nimport CountsType from './model/counts';\nimport {firestore} from 'firebase';\nimport {Dispatch, SetStateAction} from 'react';\n\nconst api = {\n    product: {\n        get: (successCallback?: Function, errorCallback?: Function, startAfter?: any) => {\n            let query = firestore().collection('products').limit(5).orderBy('createdAt', 'desc');\n            if (startAfter) {\n                query = query.startAfter(startAfter);\n            }\n            query\n                .get()\n                .then((result) => {\n                    successCallback && successCallback(result);\n                })\n                .catch((error) => {\n                    errorCallback && errorCallback(error);\n                });\n        },\n        add: (data: ProductType, success: (id: string) => void, error: () => void) => {\n            firestore()\n                .collection('products')\n                .add(data)\n                .then((newProductDoc) => {\n                    const countsDoc = firestore().collection('counts').doc('LeHK24ewKeGrwFsMbzRE');\n\n                    countsDoc\n                        .get()\n                        .then((doc) => {\n                            const counts = doc.data() as CountsType;\n                            countsDoc.update({products: counts.products + 1});\n                            success(newProductDoc.id);\n                        })\n                        .catch(() => {\n                            error();\n                        });\n                })\n                .catch(() => {\n                    error();\n                });\n        },\n        delete: (productId?: string, success?: () => void, error?: () => void) => {\n            console.log('product id', productId);\n            firestore()\n                .collection('products')\n                .doc(productId)\n                .delete()\n                .then(() => {\n                    console.log('successfully deleted');\n                    const countsDoc = firestore().collection('counts').doc('LeHK24ewKeGrwFsMbzRE');\n\n                    countsDoc\n                        .get()\n                        .then((doc) => {\n                            const counts = doc.data() as CountsType;\n                            countsDoc.update({products: counts.products - 1});\n                            success && success();\n                            console.log('successfully updated count');\n                        })\n                        .catch(() => {\n                            console.log('error fetching products count');\n                            error && error();\n                        });\n                })\n                .catch((error) => {\n                    console.log('something went', error);\n                });\n        },\n    },\n    counts: {\n        get: (getSnapshot: (snapshot: firestore.QuerySnapshot<firestore.DocumentData>) => void) => {\n            firestore()\n                .collection('counts')\n                .limit(1)\n                .onSnapshot((snapshot) => {\n                    getSnapshot(snapshot);\n                });\n        },\n    },\n};\n\nexport default api;\n","import {useState, useEffect} from 'react';\nimport api from '../../api';\nimport ProductType from '../../model/product';\nlet productDocs: any[] = [];\nconst useProductsPage = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n    const [rows, setRows] = useState<ProductType[]>([]);\n    const [deleting, setDeleting] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const openProductModal = () => {\n        setModalOpen(true);\n    };\n\n    const closeProductModal = (created: boolean) => {\n        setModalOpen(false);\n        if (created) setShowSuccessMessage(true);\n    };\n\n    const hideSuccessMessage = () => {\n        setShowSuccessMessage(false);\n    };\n\n    const loadProducts = () => {\n        setLoading(true);\n        api.product.get(\n            (result: any) => {\n                productDocs = [];\n                const items: any[] = [];\n                result.docs.forEach((doc: any) => {\n                    productDocs.push(doc);\n                    const item: any = doc.data();\n                    item.id = doc.id;\n                    items.push(item);\n                });\n                setRows(items);\n                setLoading(false);\n            },\n            () => {\n                setLoading(false);\n            }\n        );\n    };\n\n    const loadMoreProducts = () => {\n        setLoading(true);\n        api.product.get(\n            (result: any) => {\n                const items: any[] = [];\n                result.docs.forEach((doc: any) => {\n                    productDocs.push(doc);\n                    const item: any = doc.data();\n                    item.id = doc.id;\n                    items.push(item);\n                });\n                setRows((prev) => prev.concat(items));\n                setLoading(false);\n            },\n            () => {\n                setLoading(false);\n            },\n            productDocs[productDocs.length - 1]\n        );\n    };\n\n    const addProduct = (newProduct: ProductType) => {\n        rows.push(newProduct);\n        rows.sort((a: ProductType, b: ProductType) => b.createdAt - a.createdAt);\n        setRows(rows);\n    };\n\n    const deleteProduct = (index: number) => {\n        setDeleting(true);\n        api.product.delete(\n            rows[index].id,\n            () => {\n                productDocs.splice(index, 1);\n                const remaining = rows.filter((row, i) => i != index);\n                setRows(remaining);\n                setDeleting(false);\n            },\n            () => {\n                setDeleting(false);\n            }\n        );\n    };\n\n    const editProduct = () => {};\n\n    useEffect(() => {\n        loadProducts();\n    }, []);\n\n    return {\n        openProductModal,\n        closeProductModal,\n        modalOpen,\n        showSuccessMessage,\n        hideSuccessMessage,\n        deleteProduct,\n        addProduct,\n        loadMoreProducts,\n        deleting,\n        loading,\n        rows,\n    };\n};\nexport default useProductsPage;\n","import firebase from 'firebase';\nimport ProductType from '../../model/product';\nimport {useState} from 'react';\nimport api from '../../api';\n\nconst useProductModal = (\n    onAdd: (product: ProductType) => void,\n    close: (created: boolean) => void\n) => {\n    const [name, setName] = useState('');\n    const [details, setDetails] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onNameChange = (value: string) => {\n        setName(value);\n    };\n\n    const onDetailsChange = (value: string) => {\n        setDetails(value);\n    };\n\n    const handleClick = () => {\n        if (!loading) {\n            setLoading(true);\n            const now = Date.now();\n            const newProduct: ProductType = {\n                name,\n                details,\n                quantity: 0,\n                rate: 0,\n                createdAt: now,\n                updatedAt: now,\n            };\n            api.product.add(\n                newProduct,\n                (id: string) => {\n                    setLoading(false);\n                    newProduct.id = id;\n                    onAdd(newProduct);\n                    close(true);\n                },\n                () => {\n                    setLoading(false);\n                    //ToDo failed to add data\n                }\n            );\n        }\n    };\n    return {\n        handleClick,\n        onNameChange,\n        onDetailsChange,\n        loading,\n    };\n};\n\nexport default useProductModal;\n","import React from 'react';\nimport {Dialog, DialogTitle, FormControl, TextField, Grid} from '@material-ui/core';\nimport Button from '../../components/Button/Button';\nimport useProductModal from './useProductModal';\nimport ProductType from '../../model/product';\n\nexport interface ProductModalType {\n    open: boolean;\n    close: (created: boolean) => void;\n    onAdd: (product: ProductType) => void;\n}\nconst ProductModal = (props: ProductModalType) => {\n    const {open, close, onAdd} = props;\n    const {handleClick, onNameChange, onDetailsChange, loading} = useProductModal(onAdd, close);\n    return (\n        <Dialog open={open}>\n            <DialogTitle>Add New Product</DialogTitle>\n            <Grid container spacing={2} style={{padding: 24}}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Product Name\"\n                                onChange={(event) => {\n                                    onNameChange(event.target.value);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Details\"\n                                multiline\n                                rows={3}\n                                onChange={(event) => {\n                                    onDetailsChange(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2} justify={'flex-end'}>\n                        <Grid item>\n                            <Button\n                                variant=\"text\"\n                                onClick={() => {\n                                    close(false);\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button onClick={handleClick} loading={loading}>\n                                Add Product\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n};\n\nexport default ProductModal;\n","import React from 'react';\nimport {Snackbar, SnackbarCloseReason} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\ninterface FloatingAlertProps {\n    message: string;\n    open: boolean;\n    severity: 'success' | 'info' | 'warning' | 'error';\n    onClose: () => void;\n}\nconst FloatingAlert = (props: FloatingAlertProps) => {\n    const onClose = (event: React.SyntheticEvent<any, Event>, reason: SnackbarCloseReason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        props.onClose();\n    };\n    return (\n        <Snackbar\n            open={props.open}\n            autoHideDuration={1000}\n            onClose={onClose}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n        >\n            <MuiAlert variant=\"filled\" severity={props.severity}>\n                {props.message}\n            </MuiAlert>\n        </Snackbar>\n    );\n};\n\nexport default FloatingAlert;\n","import React from 'react';\nimport ProductsTable from '../../layouts/ProductsTable/ProductsTable';\nimport {Typography, Grid, TextField, FormControl, Button} from '@material-ui/core';\nimport useProductsPage from './useProductsPage';\nimport ProductModal from '../../layouts/ProductModal/ProductModal';\nimport FloatingAlert from '../../components/FloatingAlert/FloatingAlert';\nimport ProductType from '../../model/product';\n\ninterface ProductsPageType {\n    numberOfProducts: number;\n}\nconst ProductsPage = (props: ProductsPageType) => {\n    const {\n        openProductModal,\n        closeProductModal,\n        modalOpen,\n        showSuccessMessage,\n        hideSuccessMessage,\n        deleteProduct,\n        loadMoreProducts,\n        addProduct,\n        deleting,\n        loading,\n        rows,\n    } = useProductsPage();\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={10}>\n                    <Typography variant=\"h4\">Products</Typography>\n                    <Grid container alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <FormControl fullWidth>\n                                <TextField variant=\"outlined\" placeholder=\"Search Products\" />\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Grid container justify=\"flex-end\">\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={openProductModal}\n                                    >\n                                        Add New Product\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Typography variant=\"body1\">\n                        Showing {rows.length} out of {props.numberOfProducts} products\n                    </Typography>\n                    <ProductsTable\n                        rows={rows}\n                        onRowDelete={deleteProduct}\n                        deleting={deleting}\n                        onLoadMore={loadMoreProducts}\n                        allLoaded={rows.length === props.numberOfProducts}\n                        loading={loading}\n                    />\n                </Grid>\n            </Grid>\n            <FloatingAlert\n                severity=\"success\"\n                open={showSuccessMessage}\n                onClose={hideSuccessMessage}\n                message=\"Product added successfully\"\n            />\n            <ProductModal\n                open={modalOpen}\n                close={closeProductModal}\n                aria-labelledby=\"product_modal\"\n                onAdd={addProduct}\n            />\n        </>\n    );\n};\n\nexport default ProductsPage;\n","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport TestView from '../../views/TestView/TestView';\nimport {Typography} from '@material-ui/core';\nimport ProductsPage from '../../views/Products/ProductsPage';\n\ninterface RoutesType {\n    products: number;\n}\nconst Routes = (props: RoutesType) => {\n    const routes = [\n        {\n            path: '/',\n            component: <ProductsPage numberOfProducts={props.products} />,\n        },\n        {\n            path: '/products',\n            component: <ProductsPage numberOfProducts={props.products} />,\n        },\n        {\n            path: '*',\n            component: <Typography variant=\"h3\">Some Page</Typography>,\n        },\n    ];\n\n    return (\n        <Switch>\n            {routes.map((route, index) => (\n                <Route exact path={route.path} key={index}>\n                    {route.component}\n                </Route>\n            ))}\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport firebase from 'firebase';\n\nconst LogoutButton = () => {\n    const logout = () => {\n        firebase\n            .auth()\n            .signOut()\n            .then(() => {\n                console.log('succesfully signed out');\n            })\n            .catch((error) => {\n                console.log('error', error);\n            });\n    };\n    return (\n        <Button fullWidth variant=\"text\" color=\"primary\" onClick={logout}>\n            Logout\n        </Button>\n    );\n};\n\nexport default LogoutButton;\n","import {useEffect, useState} from 'react';\nimport api from '../../api';\n\nconst useWelcome = () => {\n    const [numberOfProducts, setNumberOfProducts] = useState(0);\n\n    useEffect(() => {\n        api.counts.get((snapshot) => {\n            setNumberOfProducts(snapshot.docs[0].data().products);\n        });\n    }, []);\n\n    return {\n        numberOfProducts,\n    };\n};\n\nexport default useWelcome;\n","import React from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport {Grid, Typography} from '@material-ui/core';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport {NavigationItemProps} from '../../components/NavigationItem/NavigationItem';\nimport NavigationBarLayout from '../NavigationBarLayout/NavigationBarLayout';\nimport {BrowserRouter} from 'react-router-dom';\nimport Routes from '../Routes/Routes';\nimport LogoutButton from '../../components/LogoutButton/LogoutButton';\nimport useWelcome from './useWelcome';\n\nconst Welcome = () => {\n    const {numberOfProducts} = useWelcome();\n    return (\n        <>\n            <Grid container style={{height: '100vh', backgroundColor: '#FFFFFF'}}>\n                <BrowserRouter basename=\"/bilalshop\">\n                    <Grid item xs={2}>\n                        <div style={{padding: 16}}>\n                            <Typography variant=\"h5\" align={'center'}>\n                                Bilal Shop\n                            </Typography>\n                            <LogoutButton />\n                        </div>\n\n                        <NavigationBarLayout products={numberOfProducts} />\n                    </Grid>\n                    <Grid item xs={10}>\n                        <Routes products={numberOfProducts} />\n                    </Grid>\n                </BrowserRouter>\n            </Grid>\n        </>\n    );\n};\n\nexport default Welcome;\n","import React, { useState, useEffect } from 'react';\nimport LoginComponent from './components/LoginComponent/LoginComponent';\nimport WelcomeText from './components/WelcomeText/WelcomeText';\nimport { CircularProgress } from '@material-ui/core';\nimport firebase from 'firebase';\nimport Welcome from './layouts/Welcome/Welcome';\n\nconst App = () =>\n{\n\n    const [loading, setloading] = useState(true);\n    const [signedIn, setSignedIn] = useState(false);\n\n    useEffect(()=>{\n        firebase.auth().onAuthStateChanged((user:any)=> {\n            if (user) {\n                setSignedIn(true);\n            } else {\n                setSignedIn(false);\n            }\n            setloading(false);\n        });\n    }, []);\n\n\n    return  (\n        loading ? <CircularProgress /> : signedIn ? <Welcome /> : <LoginComponent />);\n}\n   \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme, Theme} from '@material-ui/core/styles';\n\nconst primary: Theme = createMuiTheme({\n    props: {\n        MuiTextField: {\n            variant: 'outlined',\n        },\n        MuiButton: {\n            color: 'primary',\n            variant: 'contained',\n        },\n    },\n});\n\nexport default primary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\nimport {ThemeProvider} from '@material-ui/core';\nimport primary from './theme';\n\nconst config = {\n    apiKey: 'AIzaSyAN6y59cHMfZiXomgcBbIVh5p1m0yLQshI',\n    // authDomain: 'bilalshop-b7685.firebaseapp.com',\n    projectId: 'bilalshop-b7685',\n    // ...\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={primary}>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}