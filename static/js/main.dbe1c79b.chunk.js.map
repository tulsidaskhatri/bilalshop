{"version":3,"sources":["api.ts","components/LoginComponent/LoginComponent.tsx","components/NavigationItem/NavigationItem.tsx","components/NavigationBar/NavigationBar.tsx","layouts/NavigationBarLayout/NavigationBarLayout.tsx","layouts/ProductsTable/ProductsTable.tsx","views/Products/useProductsPage.ts","components/Button/Button.tsx","layouts/ProductModal/useProductModal.ts","layouts/ProductModal/ProductModal.tsx","components/FloatingAlert/FloatingAlert.tsx","views/Products/ProductsPage.tsx","layouts/Routes/Routes.tsx","components/LogoutButton/LogoutButton.tsx","layouts/Welcome/Welcome.tsx","App.tsx","serviceWorker.ts","theme.ts","index.tsx"],"names":["lastVisibleProduct","firstVisible","LoginComponent","useState","email","setEmail","password","setPassword","error","setError","Grid","container","justify","alignItems","direction","style","height","backgroundColor","item","md","sm","xs","Paper","padding","margin","spacing","Typography","variant","color","TextField","fullWidth","label","type","onChange","event","target","value","onClick","firebase","auth","signInWithEmailAndPassword","then","catch","NavigationItem","props","history","useHistory","ListItem","button","push","link","selected","divider","ListItemText","primary","text","NavigationBar","List","items","map","index","key","NavigationBarLayout","withRouter","navigationItems","location","pathname","api","product","get","setRows","setPage","next","prev","query","firestore","collection","limit","orderBy","startAfter","endBefore","onSnapshot","snapshot","products","docs","forEach","doc","data","id","length","add","success","countsDoc","counts","update","console","log","delete","getSnapshot","columns","useStyles","makeStyles","head","ProductsTable","classes","rows","totalProducts","setTotalProducts","page","deleting","setDeleting","useEffect","TableContainer","Table","TableHead","root","TableRow","column","TableCell","TableBody","row","name","rate","quantity","details","IconButton","disabled","TablePagination","rowsPerPageOptions","component","count","rowsPerPage","onChangePage","newPage","onChangeRowsPerPage","useProductsPage","modalOpen","setModalOpen","showSuccessMessage","setShowSuccessMessage","openProductModal","closeProductModal","created","hideSuccessMessage","Button","startIcon","loading","CircularProgress","size","children","useProductModal","close","setName","setDetails","setLoading","handleClick","now","Date","createdAt","updatedAt","onNameChange","onDetailsChange","ProductModal","open","Dialog","DialogTitle","multiline","FloatingAlert","Snackbar","autoHideDuration","onClose","reason","anchorOrigin","vertical","horizontal","severity","message","Products","FormControl","placeholder","aria-labelledby","Routes","routes","path","route","exact","LogoutButton","signOut","Welcome","basename","align","App","setloading","signedIn","setSignedIn","onAuthStateChanged","user","Boolean","window","hostname","match","createMuiTheme","MuiTextField","MuiButton","initializeApp","apiKey","projectId","ReactDOM","render","StrictMode","ThemeProvider","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.dbe1c79b.chunk.js","sourcesContent":["import ProductType from './model/product';\nimport CountsType from './model/counts';\nimport {firestore} from 'firebase';\nimport {Dispatch, SetStateAction} from 'react';\n\n// const getDocumentsInQuery = (\n//     query: firestore.Query,\n//     renderer: Dispatch<SetStateAction<ProductType[]>>\n// ) => {\n//     query.onSnapshot(function (snapshot) {\n//         console.log('snapshot', snapshot.size);\n//         if (!snapshot.size) {\n//             // return renderer.empty(); // Display \"There are no restaurants\".\n//         }\n\n//         snapshot.docChanges().forEach(function (change) {\n//             console.log('change', change.data());\n//             if (change.type === 'removed') {\n//                 //   renderer.remove(change.doc);\n//             } else {\n//                 // renderer((previous) => previous.concat({...change.doc}));\n//             }\n//         });\n//     });\n// };\nlet lastVisibleProduct: firestore.QueryDocumentSnapshot<firestore.DocumentData>;\nlet firstVisible: firestore.QueryDocumentSnapshot<firestore.DocumentData>;\nconst api = {\n    product: {\n        get: (\n            setRows: Dispatch<SetStateAction<ProductType[]>>,\n            setPage: Dispatch<SetStateAction<number>>,\n            next?: boolean,\n            prev?: boolean\n        ) => {\n            let query = firestore().collection('products').limit(5).orderBy('name', 'desc');\n            if (next) {\n                query = query.startAfter(lastVisibleProduct);\n            }\n            if (prev) {\n                query = query.endBefore(firstVisible);\n            }\n            query.onSnapshot((snapshot) => {\n                const products: ProductType[] = [];\n                snapshot.docs.forEach((doc) => {\n                    const product: ProductType = doc.data() as ProductType;\n                    product.id = doc.id;\n                    products.push(product);\n                });\n                setRows(products);\n                if (next) {\n                    setPage((prev) => prev + 1);\n                }\n                if (prev) {\n                    setPage((prev) => prev - 1);\n                }\n\n                lastVisibleProduct = snapshot.docs[snapshot.docs.length - 1];\n                firstVisible = snapshot.docs[0];\n            });\n        },\n        add: (data: ProductType, success: () => void, error: () => void) => {\n            firestore()\n                .collection('products')\n                .add(data)\n                .then(() => {\n                    const countsDoc = firestore().collection('counts').doc('LeHK24ewKeGrwFsMbzRE');\n\n                    countsDoc\n                        .get()\n                        .then((doc) => {\n                            const counts = doc.data() as CountsType;\n                            countsDoc.update({products: counts.products + 1});\n                            success();\n                        })\n                        .catch(() => {\n                            console.log('error fetching products count');\n                            error();\n                        });\n                })\n                .catch(() => {\n                    error();\n                });\n        },\n        delete: (product: ProductType, success: () => void, error: () => void) => {\n            firestore()\n                .collection('products')\n                .doc(product.id)\n                .delete()\n                .then(() => {\n                    const countsDoc = firestore().collection('counts').doc('LeHK24ewKeGrwFsMbzRE');\n\n                    countsDoc\n                        .get()\n                        .then((doc) => {\n                            const counts = doc.data() as CountsType;\n                            countsDoc.update({products: counts.products - 1});\n                            success();\n                        })\n                        .catch(() => {\n                            console.log('error fetching products count');\n                            error();\n                        });\n                });\n        },\n    },\n    counts: {\n        get: (getSnapshot: (snapshot: firestore.QuerySnapshot<firestore.DocumentData>) => void) => {\n            firestore()\n                .collection('counts')\n                .limit(1)\n                .onSnapshot((snapshot) => {\n                    getSnapshot(snapshot);\n                });\n        },\n    },\n};\n\nexport default api;\n","import React, {useState} from 'react';\nimport {\n    FormControl,\n    Button,\n    TextField,\n    makeStyles,\n    Grid,\n    Typography,\n    Paper,\n} from '@material-ui/core';\nimport firebase from 'firebase';\n\nconst LoginComponent = () => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleClick = () => {\n        setError('');\n        firebase\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .then(() => {})\n            .catch(function (error) {\n                setError('Invalid User');\n            });\n    };\n\n    return (\n        <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            direction=\"row\"\n            style={{height: '100vh', backgroundColor: 'lightBlue'}}\n        >\n            <Grid item md={4} sm={8} xs={12}>\n                <Paper style={{padding: 32, margin: 16}}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <Typography variant=\"h6\" color=\"error\">\n                                {error}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                variant=\"outlined\"\n                                label=\"Email\"\n                                type=\"email\"\n                                onChange={(event) => {\n                                    setEmail(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                variant=\"outlined\"\n                                type=\"password\"\n                                label=\"Password\"\n                                onChange={(event) => {\n                                    setPassword(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button fullWidth variant=\"contained\" onClick={handleClick}>\n                                Login\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default LoginComponent;\n","import React from 'react';\nimport { Link, ListItem, ListItemText } from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nexport interface NavigationItemProps {\n    text: string;\n    link: string;\n    selected: boolean;\n}\nconst NavigationItem = (props: NavigationItemProps) => {\n    const history = useHistory();\n    return (\n    <ListItem button onClick={()=>{history.push(props.link)}} selected={props.selected} divider>\n        <ListItemText primary={props.text}/>\n   </ListItem>\n    );\n}\n    \n\n\nexport default NavigationItem;","import React from 'react';\nimport NavigationItem, {NavigationItemProps} from '../NavigationItem/NavigationItem';\nimport { List } from '@material-ui/core';\n\ninterface NavigationBarProps {\n    items: NavigationItemProps[];\n}\n\nconst NavigationBar = (props: NavigationBarProps) => \n    <List>\n        {props.items.map((item:NavigationItemProps, index:number)=> (\n            <NavigationItem key={index} {...item}/>\n        ))}\n    </List>\n    \n\n\nexport default NavigationBar;","import React from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport { Grid } from '@material-ui/core';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport { NavigationItemProps } from '../../components/NavigationItem/NavigationItem';\nimport { withRouter } from 'react-router-dom';\n\nconst NavigationBarLayout = withRouter(({history}) => {\n    const navigationItems: NavigationItemProps[] = [\n        {\n            text: 'Products',\n            link:'/products',\n            selected: history.location.pathname === '/products' || history.location.pathname === '/',\n        },\n        {\n            text: 'Purchases',\n            link:'/purchases',\n            selected: history.location.pathname === '/purchases',\n        },\n        {\n            text: 'Sales',\n            link:'/sales',\n            selected: history.location.pathname === '/sales',\n        },\n        {\n            text: 'Vendors',\n            link:'/vendors',\n            selected: history.location.pathname === '/vendors',\n        },\n        {\n            text: 'Customers',\n            link:'/customers',\n            selected: history.location.pathname === '/customers',\n        },\n        {\n            text: 'Employees',\n            link:'/employees',\n            selected: history.location.pathname === '/employees',\n        },\n        {\n            text: 'Accounts',\n            link:'/accounts',\n            selected: history.location.pathname === '/accounts',\n        },\n        {\n            text: 'Loans',\n            link:'/loans',\n            selected: history.location.pathname === '/loans',\n        },\n        {\n            text: 'Expenses',\n            link:'/expenses',\n            selected: history.location.pathname === '/expenses',\n        },\n        {\n            text: 'Vendor Payments',\n            link:'/vendorpayments',\n            selected: history.location.pathname === '/vendorpayments',\n        },\n        {\n            text: 'Customer Payments',\n            link:'/customerpayments',\n            selected: history.location.pathname === '/customerpayments',\n        },\n        {\n            text: 'Invoices',\n            link:'/invoices',\n            selected: history.location.pathname === '/invoices',\n        }\n    ];\n    return <NavigationBar items={navigationItems}/>\n});\n    \n    \n\n\nexport default NavigationBarLayout;","import React, {useState, useEffect} from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport WelcomeText from '../../components/WelcomeText/WelcomeText';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport {\n    Paper,\n    TableContainer,\n    Table,\n    TableHead,\n    TableRow,\n    TableCell,\n    TableSortLabel,\n    TableBody,\n    TablePagination,\n    makeStyles,\n    IconButton,\n} from '@material-ui/core';\nimport {firestore} from 'firebase';\nimport api from '../../api';\nimport ProductType from '../../model/product';\nimport Button from '../../components/Button/Button';\n\nconst createData = (\n    name: string,\n    averageRate: number,\n    quantity: number,\n    total: number,\n    details: string\n) => {\n    return {name, averageRate, quantity, total, details};\n};\n\nconst columns: string[] = ['Name', 'Average Rate', 'Quantity', 'Total', 'Details', 'Actions'];\n\nconst useStyles = makeStyles({\n    head: {\n        backgroundColor: '#ECEDEF',\n    },\n});\nlet lastVisibleProduct;\n\nconst ProductsTable = () => {\n    const classes = useStyles();\n    const [rows, setRows] = useState<ProductType[]>([]);\n    const [totalProducts, setTotalProducts] = useState(0);\n    const [page, setPage] = useState(0);\n    const [deleting, setDeleting] = useState(false);\n\n    useEffect(() => {\n        api.counts.get((snapshot) => {\n            setTotalProducts(snapshot.docs[0].data().products);\n        });\n        api.product.get(setRows, setPage);\n    }, []);\n    return (\n        <>\n            <Paper>\n                <TableContainer>\n                    <Table>\n                        <TableHead classes={{root: classes.head}}>\n                            <TableRow>\n                                {columns.map((column: string, index: number) => (\n                                    <TableCell key={index}>{column}</TableCell>\n                                ))}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {rows.map((row, index) => (\n                                <TableRow\n                                    key={index}\n                                    onClick={() => {\n                                        console.log('clicked', index);\n                                    }}\n                                >\n                                    <TableCell>{row.name}</TableCell>\n                                    <TableCell>{row.rate}</TableCell>\n                                    <TableCell>{row.quantity}</TableCell>\n                                    <TableCell>{row.rate * row.quantity}</TableCell>\n                                    <TableCell>{row.details}</TableCell>\n                                    <TableCell>\n                                        <IconButton\n                                            onClick={() => {\n                                                setDeleting(true);\n                                                api.product.delete(\n                                                    row,\n                                                    () => {\n                                                        setDeleting(false);\n                                                    },\n                                                    () => {\n                                                        setDeleting(false);\n                                                    }\n                                                );\n                                            }}\n                                            disabled={deleting}\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n                <TablePagination\n                    rowsPerPageOptions={[]}\n                    component=\"div\"\n                    count={totalProducts}\n                    rowsPerPage={5}\n                    page={page}\n                    onChangePage={(event, newPage) => {\n                        api.product.get(setRows, setPage, page < newPage, page > newPage);\n                    }}\n                    onChangeRowsPerPage={() => {\n                        console.log('rows per page changed');\n                    }}\n                />\n            </Paper>\n        </>\n    );\n};\n\nexport default ProductsTable;\n","import {useState, useEffect} from 'react';\nimport api from '../../api';\n\nconst useProductsPage = () => {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n    const openProductModal = () => {\n        setModalOpen(true);\n    };\n\n    const closeProductModal = (created: boolean) => {\n        setModalOpen(false);\n        if (created) setShowSuccessMessage(true);\n    };\n\n    const hideSuccessMessage = () => {\n        setShowSuccessMessage(false);\n    };\n\n    return {\n        openProductModal,\n        closeProductModal,\n        modalOpen,\n        showSuccessMessage,\n        hideSuccessMessage,\n    };\n};\nexport default useProductsPage;\n","import React from 'react';\nimport {\n    Button as MuiButton,\n    ButtonProps as MuiButtonProps,\n    CircularProgress,\n} from '@material-ui/core';\n\ninterface ButtonProps extends MuiButtonProps {\n    loading?: boolean;\n}\nconst Button = (props: ButtonProps) => {\n    return (\n        <MuiButton\n            {...props}\n            startIcon={\n                props.loading ? <CircularProgress style={{color: 'white'}} size={'1rem'} /> : ''\n            }\n        >\n            {props.children}\n        </MuiButton>\n    );\n};\n\nexport default Button;\n","import firebase from 'firebase';\nimport ProductType from '../../model/product';\nimport {useState} from 'react';\nimport api from '../../api';\n\nconst useProductModal = (close: (created: boolean) => void) => {\n    const [name, setName] = useState('');\n    const [details, setDetails] = useState('');\n    const [loading, setLoading] = useState(false);\n\n    const onNameChange = (value: string) => {\n        setName(value);\n    };\n\n    const onDetailsChange = (value: string) => {\n        setDetails(value);\n    };\n\n    const handleClick = () => {\n        if (!loading) {\n            setLoading(true);\n            const now = Date.now();\n            const response = api.product.add(\n                {\n                    name,\n                    details,\n                    quantity: 0,\n                    rate: 0,\n                    createdAt: now,\n                    updatedAt: now,\n                },\n                () => {\n                    setLoading(false);\n                    close(true);\n                },\n                () => {\n                    setLoading(false);\n                    //ToDo failed to add data\n                }\n            );\n        }\n    };\n    return {\n        handleClick,\n        onNameChange,\n        onDetailsChange,\n        loading,\n    };\n};\n\nexport default useProductModal;\n","import React from 'react';\nimport {Dialog, DialogTitle, FormControl, TextField, Grid} from '@material-ui/core';\nimport Button from '../../components/Button/Button';\nimport useProductModal from './useProductModal';\n\nexport interface ProductModalType {\n    open: boolean;\n    close: (created: boolean) => void;\n}\nconst ProductModal = (props: ProductModalType) => {\n    const {open, close} = props;\n    const {handleClick, onNameChange, onDetailsChange, loading} = useProductModal(close);\n    return (\n        <Dialog open={open}>\n            <DialogTitle>Add New Product</DialogTitle>\n            <Grid container spacing={2} style={{padding: 24}}>\n                <Grid item xs={12}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Product Name\"\n                                onChange={(event) => {\n                                    onNameChange(event.target.value);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid item xs={12}>\n                            <TextField\n                                fullWidth\n                                label=\"Details\"\n                                multiline\n                                rows={3}\n                                onChange={(event) => {\n                                    onDetailsChange(event.target.value);\n                                }}\n                            />\n                        </Grid>\n                    </Grid>\n                </Grid>\n                <Grid item xs={12}>\n                    <Grid container spacing={2} justify={'flex-end'}>\n                        <Grid item>\n                            <Button\n                                variant=\"text\"\n                                onClick={() => {\n                                    close(false);\n                                }}\n                            >\n                                Cancel\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button onClick={handleClick} disabled={loading} loading={loading}>\n                                Add Product\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Dialog>\n    );\n};\n\nexport default ProductModal;\n","import React from 'react';\nimport {Snackbar, SnackbarCloseReason} from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\n\ninterface FloatingAlertProps {\n    message: string;\n    open: boolean;\n    severity: 'success' | 'info' | 'warning' | 'error';\n    onClose: () => void;\n}\nconst FloatingAlert = (props: FloatingAlertProps) => {\n    const onClose = (event: React.SyntheticEvent<any, Event>, reason: SnackbarCloseReason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n        props.onClose();\n    };\n    return (\n        <Snackbar\n            open={props.open}\n            autoHideDuration={1000}\n            onClose={onClose}\n            anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n        >\n            <MuiAlert variant=\"filled\" severity={props.severity}>\n                {props.message}\n            </MuiAlert>\n        </Snackbar>\n    );\n};\n\nexport default FloatingAlert;\n","import React from 'react';\nimport ProductsTable from '../../layouts/ProductsTable/ProductsTable';\nimport {Typography, Grid, TextField, FormControl, Button} from '@material-ui/core';\nimport useProductsPage from './useProductsPage';\nimport ProductModal from '../../layouts/ProductModal/ProductModal';\nimport FloatingAlert from '../../components/FloatingAlert/FloatingAlert';\n\nconst Products = () => {\n    const {\n        openProductModal,\n        closeProductModal,\n        modalOpen,\n        showSuccessMessage,\n        hideSuccessMessage,\n    } = useProductsPage();\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={1}></Grid>\n                <Grid item xs={10}>\n                    <Typography variant=\"h4\">Products</Typography>\n                    <Grid container alignItems=\"center\">\n                        <Grid item xs={6}>\n                            <FormControl fullWidth>\n                                <TextField variant=\"outlined\" placeholder=\"Search Products\" />\n                            </FormControl>\n                        </Grid>\n\n                        <Grid item xs={6}>\n                            <Grid container justify=\"flex-end\">\n                                <Grid item>\n                                    <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={openProductModal}\n                                    >\n                                        Add New Product\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <ProductsTable />\n                </Grid>\n            </Grid>\n            <FloatingAlert\n                severity=\"success\"\n                open={showSuccessMessage}\n                onClose={hideSuccessMessage}\n                message=\"Product added successfully\"\n            />\n            <ProductModal\n                open={modalOpen}\n                close={closeProductModal}\n                aria-labelledby=\"product_modal\"\n            />\n        </>\n    );\n};\n\nexport default Products;\n","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport TestView from '../../views/TestView/TestView';\nimport {Typography} from '@material-ui/core';\nimport Products from '../../views/Products/ProductsPage';\n\nconst Routes = () => {\n    const routes = [\n        {\n            path: '/',\n            component: <Products />,\n        },\n        {\n            path: '/products',\n            component: <Products />,\n        },\n        {\n            path: '*',\n            component: <Typography variant=\"h3\">Some Page</Typography>,\n        },\n    ];\n\n    return (\n        <Switch>\n            {routes.map((route, index) => (\n                <Route exact path={route.path} key={index}>\n                    {route.component}\n                </Route>\n            ))}\n        </Switch>\n    );\n};\n\nexport default Routes;\n","import React from 'react';\nimport {Button} from '@material-ui/core';\nimport firebase from 'firebase';\n\nconst LogoutButton = () => {\n    const logout = () => {\n        firebase\n            .auth()\n            .signOut()\n            .then(() => {\n                console.log('succesfully signed out');\n            })\n            .catch((error) => {\n                console.log('error', error);\n            });\n    };\n    return (\n        <Button fullWidth variant=\"text\" color=\"primary\" onClick={logout}>\n            Logout\n        </Button>\n    );\n};\n\nexport default LogoutButton;\n","import React from 'react';\nimport TestComponent from '../../components/TestComponent/TestComponent';\nimport LoginComponent from '../../components/LoginComponent/LoginComponent';\nimport { Grid, Typography } from '@material-ui/core';\nimport NavigationBar from '../../components/NavigationBar/NavigationBar';\nimport { NavigationItemProps } from '../../components/NavigationItem/NavigationItem';\nimport NavigationBarLayout from '../NavigationBarLayout/NavigationBarLayout';\nimport { BrowserRouter } from 'react-router-dom';\nimport Routes from '../Routes/Routes';\nimport LogoutButton from '../../components/LogoutButton/LogoutButton';\n\nconst Welcome = () => \n<>\n    <Grid container style={{height: '100vh', backgroundColor: '#FFFFFF'}}>\n        <BrowserRouter basename=\"/bilalshop\">\n        <Grid item xs={2} >\n            <div style={{padding: 16}}>\n                <Typography variant=\"h5\" align={\"center\"}>Bilal Shop</Typography>\n                <LogoutButton/>\n            </div>\n          \n            <NavigationBarLayout />\n        </Grid>\n        <Grid item xs={10}>\n            <Routes />\n        </Grid>\n        </BrowserRouter>\n        \n    </Grid>\n    </>\n\n\nexport default Welcome;","import React, { useState, useEffect } from 'react';\nimport LoginComponent from './components/LoginComponent/LoginComponent';\nimport WelcomeText from './components/WelcomeText/WelcomeText';\nimport { CircularProgress } from '@material-ui/core';\nimport firebase from 'firebase';\nimport Welcome from './layouts/Welcome/Welcome';\n\nconst App = () =>\n{\n\n    const [loading, setloading] = useState(true);\n    const [signedIn, setSignedIn] = useState(false);\n\n    useEffect(()=>{\n        firebase.auth().onAuthStateChanged((user:any)=> {\n            if (user) {\n                setSignedIn(true);\n            } else {\n                setSignedIn(false);\n            }\n            setloading(false);\n        });\n    }, []);\n\n\n    return  (\n        loading ? <CircularProgress /> : signedIn ? <Welcome /> : <LoginComponent />);\n}\n   \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createMuiTheme, Theme} from '@material-ui/core/styles';\n\nconst primary: Theme = createMuiTheme({\n    props: {\n        MuiTextField: {\n            variant: 'outlined',\n        },\n        MuiButton: {\n            color: 'primary',\n            variant: 'contained',\n        },\n    },\n});\n\nexport default primary;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from 'firebase';\nimport {ThemeProvider} from '@material-ui/core';\nimport primary from './theme';\n\nconst config = {\n    apiKey: 'AIzaSyAN6y59cHMfZiXomgcBbIVh5p1m0yLQshI',\n    // authDomain: 'bilalshop-b7685.firebaseapp.com',\n    projectId: 'bilalshop-b7685',\n    // ...\n};\nfirebase.initializeApp(config);\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={primary}>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}